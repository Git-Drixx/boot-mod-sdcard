
#==========================================================================
# Copyright (C) 2024 Chewy Mage 
# https://github.com/Haris131/boot-mod-sdcard
#==========================================================================

name: Boot mod sdcard

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      type_dtb:
        description: "Select type file"
        required: false
        default: "b860h"
        type: choice
        options:
          - b860h
          - hg680p
      type_file:
        description: "Select type file"
        required: false
        default: "img.xz"
        type: choice
        options:
          - img.xz
          - img.gz
      img_url:
        description: "Set the URL of the image file"
        required: true
        default: ""
      name_file:
        description: "Rename firmware"
        required: true
        default: "FW-MOD-SDCARD"

env:
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@main

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get -qq update
        sudo apt-get -y install wget python3
        sudo apt-get -qq autoremove --purge
        sudo apt-get -qq clean
        sudo pip3 install gdown
        sudo pip3 install git+https://github.com/Juvenal-Yescas/mediafire-dl
        wget https://mega.nz/linux/repo/xUbuntu_20.04/amd64/megacmd-xUbuntu_20.04_amd64.deb
        sudo apt install "$PWD/megacmd-xUbuntu_20.04_amd64.deb"
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir/openwrt
        sudo chown $USER:$GROUPS /workdir

    - name: Download file ${{ github.event.inputs.type_file }}
      working-directory: /workdir
      run: |
        if echo "${{ github.event.inputs.img_url }}" | grep -q "drive."; then
          link_gdrive=$(echo "${{ github.event.inputs.img_url }}" | awk -F'[/?]' '{print $6}')
          sudo gdown "$link_gdrive" -O openwrt/firmware.${{ github.event.inputs.type_file }}
        elif echo "${{ github.event.inputs.img_url }}" | grep -q "mediafire.com"; then
          sudo mediafire-dl "${{ github.event.inputs.img_url }}" -o openwrt/firmware.${{ github.event.inputs.type_file }}
        elif echo "${{ github.event.inputs.img_url }}" | grep -q "mega.nz"; then
          file_mega=$(sudo mega-get "${{ github.event.inputs.img_url }}" | awk -F: '{print $2}')
          sudo mv "$file_mega" openwrt/firmware.${{ github.event.inputs.type_file }}
        else
          sudo wget --no-check-certificate "${{ github.event.inputs.img_url }}" -O openwrt/firmware.${{ github.event.inputs.type_file }}
        fi
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Extract firmware
      run: |
        sudo mv u-boot.bin /workdir/openwrt
        sudo mv boot-mod-sdcard.tar.gz /workdir/openwrt
        cd openwrt
        sudo mkdir -p boot
        if [ "${{ github.event.inputs.type_file }}" = "img.gz" ]; then
          sudo gunzip firmware.img.gz
        else
          sudo unxz firmware.img.xz
        fi
        device=$(sudo losetup -fP --show firmware.img)
        sudo mount "${device}p1" boot
        (cd boot && sudo tar xfz /workdir/openwrt/boot-mod-sdcard.tar.gz)

        # Patch configuration files
        uenv=$(grep APPEND /workdir/openwrt/boot/uEnv.txt | awk -F 'root=' '{print $2}')
        extlinux=$(grep APPEND /workdir/openwrt/boot/extlinux/extlinux.conf | awk -F 'root=' '{print $2}')
        sudo sed -i "s|$extlinux|$uenv|g" /workdir/openwrt/boot/extlinux/extlinux.conf

        if [ "${{ github.event.inputs.type_dtb }}" = "b860h" ]; then
          dtb="meson-gxl-s905x-b860h.dtb"
        elif [ "${{ github.event.inputs.type_dtb }}" = "hg680p" ]; then
          dtb="meson-gxl-s905x-p212.dtb"
        fi
        boot=$(grep dtb /workdir/openwrt/boot/boot.ini | awk -F'/' '{print $4}' | cut -d'"' -f1)
        sudo sed -i "s|$boot|$dtb|g" /workdir/openwrt/boot/boot.ini
        sudo sed -i "s|$boot|$dtb|g" /workdir/openwrt/boot/extlinux/extlinux.conf

        # Finalize and compress image
        sudo umount "${device}p1"
        sudo dd if=u-boot.bin of="${device}" bs=1 count=444 conv=fsync
        sudo dd if=u-boot.bin of="${device}" bs=512 skip=1 seek=1 conv=fsync
        sudo losetup -d "${device}"

        if [ "${{ github.event.inputs.type_file }}" = "img.gz" ]; then
          sudo gzip firmware.img
        else
          sudo xz firmware.img
        fi
        echo "FIRMWARE=$PWD/${{ github.event.inputs.name_file }}.${{ github.event.inputs.type_file }}" >> $GITHUB_ENV

    - name: Upload release asset
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: |
          openwrt/*.img.gz
          openwrt/*.img.xz
        tag: ${{ github.ref }}
        file_glob: true
        overwrite: true
        body: |
          ## Hasil mod sdcard
